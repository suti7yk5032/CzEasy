--track0:X Grid,0,5000,0,1
--track1:Y Grid,0,5000,0,1
--track2:Direction,1,10,1,1
--track3:Number,1,1000,1,1
--check0:Inactive,0
--dialog:Move the Z axis/chk, z_check=0; Z axis Grid, z_grid="0"; Filename before, active_name="b1"; Filename after, inactive_name="b2"; Seed of random number, rand_seed="200"; Change in X, rand_x="300"; Change in Y, rand_y="300"; Change in Z, rand_z="300"; X Limit, screen_x_deadzone="0"; Y Limit, screen_y_deadzone="0"; Ignore Filter Effects/chk, filter_pass_switch=0;


require("rikky_module")

item_w, item_h = obj.getpixel()
screen_w = obj.screen_w
screen_h = obj.screen_h
x_grid = obj.track0
y_grid = obj.track1
mode = obj.track2
window_num = obj.track3 - 1
inactive_switch = obj.check0


object_type, object_info = rikky_module.getinfo("object")
group_num, group_total, group_switch = rikky_module.getinfo("groups")
group_num_fix = group_num + 1


if (group_switch >= 1) then
    if (filter_pass_switch == 1) then
        window_num = math.ceil(group_num_fix / 3 - 1)
    else
        window_num = math.ceil(group_num_fix / 2 - 1)
    end
end


if (inactive_switch == true) then
    if (object_info["file"] == nil) then
        inactive_path = "a"
    else
        inactive_path = string.gsub(object_info["file"], active_name, inactive_name)
    end

    if (group_switch >= 1) then
        if (filter_pass_switch == 1) then
            window_num = math.ceil(group_num_fix / 3 - 1)
            if ((group_num_fix - 2) % 3 == 0) then
                obj.load(inactive_path)
            end
        else
            window_num = math.ceil(group_num_fix / 2 - 1)
            if (group_num_fix % 2 == 0) then
                obj.load(inactive_path)
            end
        end
    else
        obj.load(inactive_path)
    end
end


ox = 0
oy = 0

if (mode == 1) then
    ox = (screen_w / 2 - item_w / 2) * -1 + x_grid * window_num
    oy = (screen_h / 2 - item_h / 2) * -1 + y_grid * window_num

elseif (mode == 2) then
    ox = (screen_w / 2 - item_w / 2) + x_grid * window_num * -1
    oy = (screen_h / 2 - item_h / 2) * -1 + y_grid * window_num

elseif (mode == 3) then
    ox = (screen_w / 2 - item_w / 2) * -1 + x_grid * window_num
    oy = (screen_h / 2 - item_h / 2) + y_grid * window_num * -1

elseif (mode == 4) then
    ox = (screen_w / 2 - item_w / 2) + x_grid * window_num * -1
    oy = (screen_h / 2 - item_h / 2) + y_grid * window_num * -1

elseif (mode == 5) then
    if (item_w % 2 == 1) then
        ox = 0.5
    end

    if (item_h % 2 == 1) then
        oy = 0.5
    end

elseif (mode == 6) then
    if (item_w % 2 == 1) then
        ox = 0.5
    end

    oy = (screen_h / 2 - item_h / 2) * -1 + y_grid * window_num

elseif (mode == 7) then
    if (item_w % 2 == 1) then
        ox = 0.5
    end

    oy = (screen_h / 2 - item_h / 2) + y_grid * window_num * -1

elseif (mode == 8) then
    ox = (screen_w / 2 - item_w / 2) * -1 + x_grid * window_num

    if (item_h % 2 == 1) then
        oy = 0.5
    end

elseif (mode == 9) then
    ox = (screen_w / 2 - item_w / 2) + x_grid * window_num * -1

    if (item_h % 2 == 1) then
        oy = 0.5
    end

elseif (mode == 10) then
    ox = math.ceil(obj.rand(rand_x * -1, rand_x, rand_seed, 0))
    oy = math.ceil(obj.rand(rand_y * -1, rand_y, rand_seed + 1, 0))
    if (ox % 2 == 0) then
        ox = ox + x_grid * -1
    else
        ox = ox + x_grid
    end
    if (oy % 2 == 1) then
        oy = oy + y_grid * -1
    else
        oy = oy + y_grid
    end

    if (item_w % 2 == 1) then
        ox = ox + 0.5
    end
    if (item_h % 2 == 1) then
        oy = oy + 0.5 
    end
end


if (tonumber(screen_x_deadzone) < 0) then
    hamidashi_x_limit = (screen_w / 2) + (screen_x_deadzone) + (item_w / 2 * -1) + (obj.x * -1)
    if (ox > hamidashi_x_limit) then
        ox = hamidashi_x_limit
    end
elseif (tonumber(screen_x_deadzone) > 0) then
    hamidashi_x_limit = (screen_w / 2 * -1) + (screen_x_deadzone) + (item_w / 2) + (obj.x * -1)
    if (ox < hamidashi_x_limit) then
        ox = hamidashi_x_limit
    end
end

if (tonumber(screen_y_deadzone) < 0) then
    hamidashi_y_limit = (screen_h / 2) + (screen_y_deadzone) + (item_h / 2 * -1) + (obj.y * -1)
    if (oy > hamidashi_y_limit) then
        oy = hamidashi_y_limit
    end
elseif (tonumber(screen_y_deadzone) > 0) then
    hamidashi_y_limit = (screen_h / 2 * -1) + (screen_y_deadzone) + (item_h / 2) + (obj.y * -1)
    if (oy < hamidashi_y_limit) then
        oy = hamidashi_y_limit
    end
end


if (z_check == 1) then
    if (tonumber(z_grid) > 0 or tonumber(z_grid) < 0) then
        oz = math.ceil(z_grid * window_num * -1)
    elseif (mode == 10) then
        oz = math.ceil(obj.rand(rand_z * -1, rand_z, rand_seed + 2, 0))
        if (oz % 2 == 0) then
            oz = oz + grid * -1
        else
            oz = oz + grid
        end
    else
        oz = math.ceil(grid * window_num * -1)
    end
    
    obj.oz = obj.oz + oz
end


obj.ox = obj.ox + ox
obj.oy = obj.oy + oy